ros2 control switch_controllers --activate joint_state_broadcaster --activate joint_trajectory_controller --deactivate velocity_controller
ros2 action send_goal /joint_trajectory_controller/follow_joint_trajectory control_msgs/action/FollowJointTrajectory -f "{
  trajectory: {
    joint_names: [joint4, joint5, joint6, joint7],
    points: [
      { positions: [0, 0, 0, 0], time_from_start: { sec: 0 } },
      { positions: [0.1, 0.1, 0.1, 0.1], time_from_start: { sec: 2 } },
      { positions: [-0.1, -0.1, -0.1, -0.1], time_from_start: { sec: 4 } },
      { positions: [0, 0, 0, 0], time_from_start: { sec: 6 } }
    ]
  }
}"

result:
[KinematicSol.py-2] [INFO] [1726114200.749055177] [trajectory]: KinematicChain: Waiting for the URDF to be published...
[KinematicSol.py-2] [INFO] [1726114200.755900032] [trajectory]: KinematicChain: Proccessing URDF for robot 'threeDOF'
[KinematicSol.py-2] [INFO] [1726114200.756860061] [trajectory]: KinematicChain: URDF has 4 steps, 3 active DOFs:
[KinematicSol.py-2] [INFO] [1726114200.757069120] [trajectory]: KinematicChain: Step #0 REVOLUTE DOF #0 'theta1'
[KinematicSol.py-2] [INFO] [1726114200.757269944] [trajectory]: KinematicChain: Step #1 REVOLUTE DOF #1 'theta2'
[KinematicSol.py-2] [INFO] [1726114200.757463916] [trajectory]: KinematicChain: Step #2 REVOLUTE DOF #2 'theta3'
[KinematicSol.py-2] [INFO] [1726114200.757663958] [trajectory]: KinematicChain: Step #3 FIXED           'shifttotip'
[KinematicSol.py-2] q:
[KinematicSol.py-2]  [[ 0.349]
[KinematicSol.py-2]  [ 0.698]
[KinematicSol.py-2]  [-0.524]]
[KinematicSol.py-2] ptip(q):
[KinematicSol.py-2]  [[-0.599]
[KinematicSol.py-2]  [ 1.645]
[KinematicSol.py-2]  [ 0.816]]
[KinematicSol.py-2] Rtip(q):
[KinematicSol.py-2]  [[ 0.94  -0.337  0.059]
[KinematicSol.py-2]  [ 0.342  0.925 -0.163]
[KinematicSol.py-2]  [ 0.     0.174  0.985]]
[KinematicSol.py-2] Jv(q):
[KinematicSol.py-2]  [[-1.645  0.279  0.059]
[KinematicSol.py-2]  [-0.599 -0.767 -0.163]
[KinematicSol.py-2]  [ 0.     1.751  0.985]]
[KinematicSol.py-2] Jw(q):
[KinematicSol.py-2]  [[0.    0.94  0.94 ]
[KinematicSol.py-2]  [0.    0.342 0.342]
[KinematicSol.py-2]  [1.    0.    0.   ]]
[KinematicSol.py-2] ----------------------------------------
[KinematicSol.py-2] q:
[KinematicSol.py-2]  [[0.524]
[KinematicSol.py-2]  [0.524]
[KinematicSol.py-2]  [1.047]]
[KinematicSol.py-2] ptip(q):
[KinematicSol.py-2]  [[-0.433]
[KinematicSol.py-2]  [ 0.75 ]
[KinematicSol.py-2]  [ 1.5  ]]
[KinematicSol.py-2] Rtip(q):
[KinematicSol.py-2]  [[ 0.866 -0.     0.5  ]
[KinematicSol.py-2]  [ 0.5    0.    -0.866]
[KinematicSol.py-2]  [ 0.     1.     0.   ]]
[KinematicSol.py-2] Jv(q):
[KinematicSol.py-2]  [[-0.75   0.75   0.5  ]
[KinematicSol.py-2]  [-0.433 -1.299 -0.866]
[KinematicSol.py-2]  [ 0.     0.866  0.   ]]
[KinematicSol.py-2] Jw(q):
[KinematicSol.py-2]  [[0.    0.866 0.866]
[KinematicSol.py-2]  [0.    0.5   0.5  ]
[KinematicSol.py-2]  [1.    0.    0.   ]]
[KinematicSol.py-2] ----------------------------------------
[KinematicSol.py-2] q:
[KinematicSol.py-2]  [[-0.785]
[KinematicSol.py-2]  [ 1.309]
[KinematicSol.py-2]  [ 2.094]]
[KinematicSol.py-2] ptip(q):
[KinematicSol.py-2]  [[-0.5  ]
[KinematicSol.py-2]  [-0.5  ]
[KinematicSol.py-2]  [ 0.707]]
[KinematicSol.py-2] Rtip(q):
[KinematicSol.py-2]  [[ 0.707 -0.683  0.183]
[KinematicSol.py-2]  [-0.707 -0.683  0.183]
[KinematicSol.py-2]  [ 0.    -0.259 -0.966]]
[KinematicSol.py-2] Jv(q):
[KinematicSol.py-2]  [[ 0.5   -0.5    0.183]
[KinematicSol.py-2]  [-0.5   -0.5    0.183]
[KinematicSol.py-2]  [ 0.    -0.707 -0.966]]
[KinematicSol.py-2] Jw(q):
[KinematicSol.py-2]  [[ 0.     0.707  0.707]
[KinematicSol.py-2]  [ 0.    -0.707 -0.707]
[KinematicSol.py-2]  [ 1.     0.     0.   ]]
[KinematicSol.py-2] ----------------------------------------


ros2 control switch_controllers --activate joint_state_broadcaster --activate joint_trajectory_controller 
ros2 action send_goal /joint_trajectory_controller/follow_joint_trajectory control_msgs/action/FollowJointTrajectory -f "{
  trajectory: {
    joint_names: [joint1, joint2, joint3, joint4, joint5, joint6, joint7],
    points: [
      { positions: [0.8, -1.0, 1.5, 1.5, 0.0, -0.8, 0.0], time_from_start: { sec: 2 } },
      { positions: [-0.6, -0.4, -0.13, -0.1, -0.1, -0.1, -0.1], time_from_start: { sec: 4 } },
      { positions: [0, 0, 0, 0, 0, 0, 0], time_from_start: { sec: 6 } }
    ]
  }
}"
q = 0.8 
q = -1.0 
q = 1.5 
q = 1.5 
q = 0.0 
q = -0.8 
ros2 action send_goal /joint_trajectory_controller/follow_joint_trajectory control_msgs/action/FollowJointTrajectory -f "{
  trajectory: {
    joint_names: [joint1, joint2, joint3, joint4, joint5, joint6, joint7],
    points: [
      { positions: [0.8, -1.0, 1.5, 1.5, 0.0, -0.8, 0.0], time_from_start: { sec: 2 } },
    ]
  }
}"
q = 0.8 
q = 2.0 
q = -1.6 
q = -1.6 
q = -3.1 
q = 2.4 

ros2 action send_goal /joint_trajectory_controller/follow_joint_trajectory control_msgs/action/FollowJointTrajectory -f "{
  trajectory: {
    joint_names: [joint1, joint2, joint3, joint4, joint5, joint6, joint7],
    points: [
      { positions: [0.0, 0.0, 0.0, 1.6, 3.1, 2.4, 0.0], time_from_start: { sec: 6} },
    ]
  }
}"
  ros2 action send_goal /joint_trajectory_controller/follow_joint_trajectory control_msgs/action/FollowJointTrajectory -f "{
    trajectory: {
      joint_names: [joint1, joint2, joint3, joint4, joint5, joint6, joint7],
      points: [
        { positions: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0,0.0], time_from_start: { sec: 6} },
      ]
    }
  }"
  ros2 control switch_controllers --activate joint_state_broadcaster --activate joint_trajectory_controller 

  ros2 topic echo /motor_positions
